var N = null;var searchIndex = {};
searchIndex["shiplift"]={"doc":"Shiplift is a multi-transport utility for maneuvering docker containers","items":[[3,"Docker","shiplift","Entrypoint interface for communicating with docker daemon",N,N],[3,"Image","","Interface for accessing and manipulating a named docker image",N,N],[3,"Images","","Interface for docker images",N,N],[3,"Container","","Interface for accessing and manipulating a docker container",N,N],[3,"Containers","","Interface for docker containers",N,N],[3,"Networks","","Interface for docker network",N,N],[3,"Network","","Interface for accessing and manipulating a docker network",N,N],[0,"builder","","Interfaces for building various structures",N,N],[3,"PullOptions","shiplift::builder","",N,N],[3,"PullOptionsBuilder","","",N,N],[3,"BuildOptions","","",N,N],[12,"path","","",0,N],[3,"BuildOptionsBuilder","","",N,N],[3,"ContainerListOptions","","Options for filtering container list results",N,N],[3,"ContainerListOptionsBuilder","","Builder interface for `ContainerListOptions`",N,N],[3,"ContainerOptions","","Interface for building a new docker container from an existing image",N,N],[12,"name","","",1,N],[3,"ContainerOptionsBuilder","","",N,N],[3,"ExecContainerOptions","","",N,N],[3,"ExecContainerOptionsBuilder","","",N,N],[3,"EventsOptions","","Options for filtering streams of Docker events",N,N],[3,"EventsOptionsBuilder","","Builder interface for `EventOptions`",N,N],[3,"LogsOptions","","Options for controlling log request results",N,N],[3,"LogsOptionsBuilder","","Builder interface for `LogsOptions`",N,N],[3,"ImageListOptions","","Options for filtering image list results",N,N],[3,"ImageListOptionsBuilder","","Builder interface for `ImageListOptions`",N,N],[3,"RmContainerOptions","","Options for controlling log request results",N,N],[3,"RmContainerOptionsBuilder","","Builder interface for `LogsOptions`",N,N],[3,"NetworkListOptions","","Options for filtering networks list results",N,N],[3,"NetworkCreateOptions","","Interface for creating new docker network",N,N],[12,"name","","",2,N],[3,"NetworkCreateOptionsBuilder","","",N,N],[3,"ContainerConnectionOptions","","Interface for connect container to network",N,N],[12,"Container","","",3,N],[4,"ContainerFilter","","Filter options for container listings",N,N],[13,"ExitCode","","",4,N],[13,"Status","","",4,N],[13,"LabelName","","",4,N],[13,"Label","","",4,N],[4,"EventFilterType","","",N,N],[13,"Container","","",5,N],[13,"Image","","",5,N],[13,"Volume","","",5,N],[13,"Network","","",5,N],[13,"Daemon","","",5,N],[4,"EventFilter","","Filter options for image listings",N,N],[13,"Container","","",6,N],[13,"Event","","",6,N],[13,"Image","","",6,N],[13,"Label","","",6,N],[13,"Type","","",6,N],[13,"Volume","","",6,N],[13,"Network","","",6,N],[13,"Daemon","","",6,N],[4,"ImageFilter","","Filter options for image listings",N,N],[13,"Dangling","","",7,N],[13,"LabelName","","",7,N],[13,"Label","","",7,N],[11,"default","","",8,[[],["pulloptions"]]],[11,"builder","","return a new instance of a builder for options",8,[[],["pulloptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",8,[[["self"]],["option",["string"]]]],[11,"default","","",9,[[],["pulloptionsbuilder"]]],[11,"new","","",9,[[],["pulloptionsbuilder"]]],[11,"image","","",9,[[["self"],["i"]],["pulloptionsbuilder"]]],[11,"src","","",9,[[["self"],["s"]],["pulloptionsbuilder"]]],[11,"repo","","",9,[[["self"],["r"]],["pulloptionsbuilder"]]],[11,"tag","","",9,[[["self"],["t"]],["pulloptionsbuilder"]]],[11,"build","","",9,[[["self"]],["pulloptions"]]],[11,"default","","",0,[[],["buildoptions"]]],[11,"builder","","return a new instance of a builder for options path is expected to be a file path to a directory containing a Dockerfile describing how to build a Docker image",0,[[["s"]],["buildoptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",0,[[["self"]],["option",["string"]]]],[11,"default","","",10,[[],["buildoptionsbuilder"]]],[11,"new","","path is expected to be a file path to a directory containing a Dockerfile describing how to build a Docker image",10,[[["s"]],["buildoptionsbuilder"]]],[11,"dockerfile","","set the name of the docker file. defaults to \"DockerFile\"",10,[[["self"],["p"]],["buildoptionsbuilder"]]],[11,"tag","","tag this image with a name after building it",10,[[["self"],["t"]],["buildoptionsbuilder"]]],[11,"remote","","",10,[[["self"],["r"]],["buildoptionsbuilder"]]],[11,"nocache","","don't use the image cache when building image",10,[[["self"],["bool"]],["buildoptionsbuilder"]]],[11,"rm","","",10,[[["self"],["bool"]],["buildoptionsbuilder"]]],[11,"forcerm","","",10,[[["self"],["bool"]],["buildoptionsbuilder"]]],[11,"network_mode","","`bridge`, `host`, `none`, `container:<name|id>`, or a custom network name.",10,[[["self"],["t"]],["buildoptionsbuilder"]]],[11,"build","","",10,[[["self"]],["buildoptions"]]],[11,"default","","",11,[[],["containerlistoptions"]]],[11,"builder","","return a new instance of a builder for options",11,[[],["containerlistoptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",11,[[["self"]],["option",["string"]]]],[11,"default","","",12,[[],["containerlistoptionsbuilder"]]],[11,"new","","",12,[[],["containerlistoptionsbuilder"]]],[11,"filter","","",12,[[["self"],["vec",["containerfilter"]]],["containerlistoptionsbuilder"]]],[11,"all","","",12,[[["self"]],["containerlistoptionsbuilder"]]],[11,"since","","",12,[[["self"],["str"]],["containerlistoptionsbuilder"]]],[11,"before","","",12,[[["self"],["str"]],["containerlistoptionsbuilder"]]],[11,"sized","","",12,[[["self"]],["containerlistoptionsbuilder"]]],[11,"build","","",12,[[["self"]],["containerlistoptions"]]],[11,"to_json","","",1,[[["self"]],["json"]]],[11,"builder","","return a new instance of a builder for options",1,[[["str"]],["containeroptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",1,[[["self"]],["result",["string"]]]],[11,"parse_from","","",1,[[["self"],["hashmap"],["json"]]]],[11,"default","","",13,[[],["containeroptionsbuilder"]]],[11,"new","","",13,[[["str"]],["containeroptionsbuilder"]]],[11,"name","","",13,[[["self"],["str"]],["containeroptionsbuilder"]]],[11,"volumes","","",13,[[["self"],["vec",["str"]]],["containeroptionsbuilder"]]],[11,"links","","",13,[[["self"],["vec",["str"]]],["containeroptionsbuilder"]]],[11,"labels","","",13,[[["self"],["hashmap"]],["containeroptionsbuilder"]]],[11,"extra_hosts","","",13,[[["self"],["vec",["str"]]],["containeroptionsbuilder"]]],[11,"volumes_from","","",13,[[["self"],["vec",["str"]]],["containeroptionsbuilder"]]],[11,"network_mode","","",13,[[["self"],["str"]],["containeroptionsbuilder"]]],[11,"env","","",13,[[["self"],["vec",["str"]]],["containeroptionsbuilder"]]],[11,"cmd","","",13,[[["self"],["vec",["str"]]],["containeroptionsbuilder"]]],[11,"entrypoint","","",13,[[["self"],["str"]],["containeroptionsbuilder"]]],[11,"capabilities","","",13,[[["self"],["vec",["str"]]],["containeroptionsbuilder"]]],[11,"devices","","",13,[[["self"],["vec",["hashmap"]]],["containeroptionsbuilder"]]],[11,"log_driver","","",13,[[["self"],["str"]],["containeroptionsbuilder"]]],[11,"restart_policy","","",13,[[["self"],["str"],["u64"]],["containeroptionsbuilder"]]],[11,"build","","",13,[[["self"]],["containeroptions"]]],[11,"builder","","return a new instance of a builder for options",14,[[],["execcontaineroptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",14,[[["self"]],["result",["string"]]]],[11,"default","","",15,[[],["execcontaineroptionsbuilder"]]],[11,"new","","",15,[[],["execcontaineroptionsbuilder"]]],[11,"cmd","","Command to run, as an array of strings",15,[[["self"],["vec",["str"]]],["execcontaineroptionsbuilder"]]],[11,"env","","A list of environment variables in the form \"VAR=value\"",15,[[["self"],["vec",["str"]]],["execcontaineroptionsbuilder"]]],[11,"attach_stdout","","Attach to stdout of the exec command",15,[[["self"],["bool"]],["execcontaineroptionsbuilder"]]],[11,"attach_stderr","","Attach to stderr of the exec command",15,[[["self"],["bool"]],["execcontaineroptionsbuilder"]]],[11,"build","","",15,[[["self"]],["execcontaineroptions"]]],[11,"default","","",16,[[],["eventsoptions"]]],[11,"builder","","",16,[[],["eventsoptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",16,[[["self"]],["option",["string"]]]],[11,"default","","",17,[[],["eventsoptionsbuilder"]]],[11,"new","","",17,[[],["eventsoptionsbuilder"]]],[11,"since","","Filter events since a given timestamp",17,[[["self"],["u64"]],["eventsoptionsbuilder"]]],[11,"until","","Filter events until a given timestamp",17,[[["self"],["u64"]],["eventsoptionsbuilder"]]],[11,"filter","","",17,[[["self"],["vec",["eventfilter"]]],["eventsoptionsbuilder"]]],[11,"build","","",17,[[["self"]],["eventsoptions"]]],[11,"default","","",18,[[],["logsoptions"]]],[11,"builder","","return a new instance of a builder for options",18,[[],["logsoptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",18,[[["self"]],["option",["string"]]]],[11,"default","","",19,[[],["logsoptionsbuilder"]]],[11,"new","","",19,[[],["logsoptionsbuilder"]]],[11,"follow","","",19,[[["self"],["bool"]],["logsoptionsbuilder"]]],[11,"stdout","","",19,[[["self"],["bool"]],["logsoptionsbuilder"]]],[11,"stderr","","",19,[[["self"],["bool"]],["logsoptionsbuilder"]]],[11,"timestamps","","",19,[[["self"],["bool"]],["logsoptionsbuilder"]]],[11,"tail","","how_many can either by \"all\" or a to_string() of the number",19,[[["self"],["str"]],["logsoptionsbuilder"]]],[11,"build","","",19,[[["self"]],["logsoptions"]]],[11,"default","","",20,[[],["imagelistoptions"]]],[11,"builder","","",20,[[],["imagelistoptionsbuilder"]]],[11,"serialize","","",20,[[["self"]],["option",["string"]]]],[11,"default","","",21,[[],["imagelistoptionsbuilder"]]],[11,"new","","",21,[[],["imagelistoptionsbuilder"]]],[11,"digests","","",21,[[["self"],["bool"]],["imagelistoptionsbuilder"]]],[11,"all","","",21,[[["self"],["bool"]],["imagelistoptionsbuilder"]]],[11,"filter_name","","",21,[[["self"],["str"]],["imagelistoptionsbuilder"]]],[11,"filter","","",21,[[["self"],["vec",["imagefilter"]]],["imagelistoptionsbuilder"]]],[11,"build","","",21,[[["self"]],["imagelistoptions"]]],[11,"default","","",22,[[],["rmcontaineroptions"]]],[11,"builder","","return a new instance of a builder for options",22,[[],["rmcontaineroptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",22,[[["self"]],["option",["string"]]]],[11,"default","","",23,[[],["rmcontaineroptionsbuilder"]]],[11,"new","","",23,[[],["rmcontaineroptionsbuilder"]]],[11,"force","","",23,[[["self"],["bool"]],["rmcontaineroptionsbuilder"]]],[11,"volumes","","",23,[[["self"],["bool"]],["rmcontaineroptionsbuilder"]]],[11,"build","","",23,[[["self"]],["rmcontaineroptions"]]],[11,"default","","",24,[[],["networklistoptions"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",24,[[["self"]],["option",["string"]]]],[11,"to_json","","",2,[[["self"]],["json"]]],[11,"builder","","return a new instance of a builder for options",2,[[["str"]],["networkcreateoptionsbuilder"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",2,[[["self"]],["result",["string"]]]],[11,"parse_from","","",2,[[["self"],["hashmap"],["btreemap"]]]],[11,"default","","",25,[[],["networkcreateoptionsbuilder"]]],[11,"new","","",25,[[["str"]],["networkcreateoptionsbuilder"]]],[11,"driver","","",25,[[["self"],["str"]],["networkcreateoptionsbuilder"]]],[11,"label","","",25,[[["self"],["vec",["hashmap"]]],["networkcreateoptionsbuilder"]]],[11,"build","","",25,[[["self"]],["networkcreateoptions"]]],[11,"to_json","","",3,[[["self"]],["json"]]],[11,"serialize","","serialize options as a string. returns None if no options are defined",3,[[["self"]],["result",["string"]]]],[11,"parse_from","","",3,[[["self"],["hashmap"],["btreemap"]]]],[11,"new","","",3,[[["str"]],["containerconnectionoptions"]]],[11,"force","","",3,[[["self"]],["containerconnectionoptions"]]],[0,"rep","shiplift","Rust representations of docker json structures",N,N],[3,"SearchResult","shiplift::rep","",N,N],[12,"description","","",26,N],[12,"is_official","","",26,N],[12,"is_trusted","","",26,N],[12,"name","","",26,N],[12,"star_count","","",26,N],[3,"Image","","",N,N],[12,"Created","","",27,N],[12,"Id","","",27,N],[12,"ParentId","","",27,N],[12,"Labels","","",27,N],[12,"RepoTags","","",27,N],[12,"RepoDigests","","",27,N],[12,"VirtualSize","","",27,N],[3,"ImageDetails","","",N,N],[12,"Architecture","","",28,N],[12,"Author","","",28,N],[12,"Comment","","",28,N],[12,"Config","","",28,N],[12,"Created","","",28,N],[12,"DockerVersion","","",28,N],[12,"Id","","",28,N],[12,"Os","","",28,N],[12,"Parent","","",28,N],[12,"Size","","",28,N],[12,"VirtualSize","","",28,N],[3,"Container","","",N,N],[12,"Created","","",29,N],[12,"Command","","",29,N],[12,"Id","","",29,N],[12,"Image","","",29,N],[12,"Labels","","",29,N],[12,"Names","","",29,N],[12,"Ports","","",29,N],[12,"Status","","",29,N],[12,"SizeRw","","",29,N],[12,"SizeRootFs","","",29,N],[3,"ContainerDetails","","",N,N],[12,"AppArmorProfile","","",30,N],[12,"Args","","",30,N],[12,"Config","","",30,N],[12,"Created","","",30,N],[12,"Driver","","",30,N],[12,"HostConfig","","",30,N],[12,"HostnamePath","","",30,N],[12,"HostsPath","","",30,N],[12,"LogPath","","",30,N],[12,"Id","","",30,N],[12,"Image","","",30,N],[12,"MountLabel","","",30,N],[12,"NetworkSettings","","",30,N],[12,"Path","","",30,N],[12,"ProcessLabel","","",30,N],[12,"ResolvConfPath","","",30,N],[12,"RestartCount","","",30,N],[12,"State","","",30,N],[12,"Mounts","","",30,N],[3,"Mount","","",N,N],[12,"Source","","",31,N],[12,"Destination","","",31,N],[12,"Mode","","",31,N],[12,"RW","","",31,N],[3,"State","","",N,N],[12,"Error","","",32,N],[12,"ExitCode","","",32,N],[12,"FinishedAt","","",32,N],[12,"OOMKilled","","",32,N],[12,"Paused","","",32,N],[12,"Pid","","",32,N],[12,"Restarting","","",32,N],[12,"Running","","",32,N],[12,"StartedAt","","",32,N],[3,"NetworkSettings","","",N,N],[12,"Bridge","","",33,N],[12,"Gateway","","",33,N],[12,"IPAddress","","",33,N],[12,"IPPrefixLen","","",33,N],[12,"MacAddress","","",33,N],[3,"HostConfig","","",N,N],[12,"CgroupParent","","",34,N],[12,"ContainerIDFile","","",34,N],[12,"CpuShares","","",34,N],[12,"CpusetCpus","","",34,N],[12,"Memory","","",34,N],[12,"MemorySwap","","",34,N],[12,"NetworkMode","","",34,N],[12,"PidMode","","",34,N],[12,"Privileged","","",34,N],[12,"PublishAllPorts","","",34,N],[12,"ReadonlyRootfs","","",34,N],[3,"Config","","",N,N],[12,"AttachStderr","","",35,N],[12,"AttachStdin","","",35,N],[12,"AttachStdout","","",35,N],[12,"Cmd","","",35,N],[12,"Domainname","","",35,N],[12,"Entrypoint","","",35,N],[12,"Env","","",35,N],[12,"Hostname","","",35,N],[12,"Image","","",35,N],[12,"Labels","","",35,N],[12,"OnBuild","","",35,N],[12,"OpenStdin","","",35,N],[12,"StdinOnce","","",35,N],[12,"Tty","","",35,N],[12,"User","","",35,N],[12,"WorkingDir","","",35,N],[3,"Port","","",N,N],[12,"IP","","",36,N],[12,"PrivatePort","","",36,N],[12,"PublicPort","","",36,N],[12,"Type","","",36,N],[3,"Stats","","",N,N],[12,"read","","",37,N],[12,"networks","","",37,N],[12,"memory_stats","","",37,N],[12,"blkio_stats","","",37,N],[12,"cpu_stats","","",37,N],[3,"Network","","",N,N],[12,"rx_dropped","","",38,N],[12,"rx_bytes","","",38,N],[12,"rx_errors","","",38,N],[12,"tx_packets","","",38,N],[12,"tx_dropped","","",38,N],[12,"rx_packets","","",38,N],[12,"tx_errors","","",38,N],[12,"tx_bytes","","",38,N],[3,"IPAM","","",N,N],[12,"Driver","","",39,N],[12,"Config","","",39,N],[12,"Options","","",39,N],[3,"NetworkDetails","","",N,N],[12,"Name","","",40,N],[12,"Id","","",40,N],[12,"Scope","","",40,N],[12,"Driver","","",40,N],[12,"EnableIPv6","","",40,N],[12,"IPAM","","",40,N],[12,"Internal","","",40,N],[12,"Attachable","","",40,N],[12,"Containers","","",40,N],[12,"Options","","",40,N],[12,"Labels","","",40,N],[3,"NetworkContainerDetails","","",N,N],[12,"EndpointID","","",41,N],[12,"MacAddress","","",41,N],[12,"IPv4Address","","",41,N],[12,"IPv6Address","","",41,N],[3,"NetworkCreateInfo","","",N,N],[12,"Id","","",42,N],[12,"Warning","","",42,N],[3,"MemoryStats","","",N,N],[12,"max_usage","","",43,N],[12,"usage","","",43,N],[12,"failcnt","","",43,N],[12,"limit","","",43,N],[12,"stats","","",43,N],[3,"MemoryStat","","",N,N],[12,"total_pgmajfault","","",44,N],[12,"cache","","",44,N],[12,"mapped_file","","",44,N],[12,"total_inactive_file","","",44,N],[12,"pgpgout","","",44,N],[12,"rss","","",44,N],[12,"total_mapped_file","","",44,N],[12,"writeback","","",44,N],[12,"unevictable","","",44,N],[12,"pgpgin","","",44,N],[12,"total_unevictable","","",44,N],[12,"pgmajfault","","",44,N],[12,"total_rss","","",44,N],[12,"total_rss_huge","","",44,N],[12,"total_writeback","","",44,N],[12,"total_inactive_anon","","",44,N],[12,"rss_huge","","",44,N],[12,"hierarchical_memory_limit","","",44,N],[12,"hierarchical_memsw_limit","","",44,N],[12,"total_pgfault","","",44,N],[12,"total_active_file","","",44,N],[12,"active_anon","","",44,N],[12,"total_active_anon","","",44,N],[12,"total_pgpgout","","",44,N],[12,"total_cache","","",44,N],[12,"inactive_anon","","",44,N],[12,"active_file","","",44,N],[12,"pgfault","","",44,N],[12,"inactive_file","","",44,N],[12,"total_pgpgin","","",44,N],[12,"swap","","",44,N],[12,"total_swap","","",44,N],[3,"CpuStats","","",N,N],[12,"cpu_usage","","",45,N],[12,"system_cpu_usage","","",45,N],[12,"throttling_data","","",45,N],[3,"CpuUsage","","",N,N],[12,"percpu_usage","","",46,N],[12,"usage_in_usermode","","",46,N],[12,"total_usage","","",46,N],[12,"usage_in_kernelmode","","",46,N],[3,"ThrottlingData","","",N,N],[12,"periods","","",47,N],[12,"throttled_periods","","",47,N],[12,"throttled_time","","",47,N],[3,"BlkioStats","","",N,N],[12,"io_service_bytes_recursive","","",48,N],[12,"io_serviced_recursive","","",48,N],[12,"io_queue_recursive","","",48,N],[12,"io_service_time_recursive","","",48,N],[12,"io_wait_time_recursive","","",48,N],[12,"io_merged_recursive","","",48,N],[12,"io_time_recursive","","",48,N],[12,"sectors_recursive","","",48,N],[3,"BlkioStat","","",N,N],[12,"major","","",49,N],[12,"minor","","",49,N],[12,"op","","",49,N],[12,"value","","",49,N],[3,"Change","","",N,N],[12,"Kind","","",50,N],[12,"Path","","",50,N],[3,"Top","","",N,N],[12,"Titles","","",51,N],[12,"Processes","","",51,N],[3,"Version","","",N,N],[12,"ApiVersion","","",52,N],[12,"Version","","",52,N],[12,"GitCommit","","",52,N],[12,"GoVersion","","",52,N],[3,"Info","","",N,N],[12,"Containers","","",53,N],[12,"Images","","",53,N],[12,"Driver","","",53,N],[12,"DockerRootDir","","",53,N],[12,"DriverStatus","","",53,N],[12,"ID","","",53,N],[12,"KernelVersion","","",53,N],[12,"MemTotal","","",53,N],[12,"MemoryLimit","","",53,N],[12,"NCPU","","",53,N],[12,"NEventsListener","","",53,N],[12,"NGoroutines","","",53,N],[12,"Name","","",53,N],[12,"OperatingSystem","","",53,N],[12,"SwapLimit","","",53,N],[12,"SystemTime","","",53,N],[3,"ContainerCreateInfo","","",N,N],[12,"Id","","",54,N],[12,"Warnings","","",54,N],[3,"History","","",N,N],[12,"Id","","",55,N],[12,"Created","","",55,N],[12,"CreatedBy","","",55,N],[3,"Exit","","",N,N],[12,"StatusCode","","",56,N],[3,"Event","","",N,N],[12,"status","","",57,N],[12,"id","","",57,N],[12,"from","","",57,N],[12,"time","","",57,N],[12,"timeNano","","",57,N],[4,"Status","","",N,N],[13,"Untagged","","",58,N],[13,"Deleted","","",58,N],[11,"clone","","",26,[[["self"]],["searchresult"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"encode","","",26,[[["self"],["__s"]],["result"]]],[11,"decode","","",26,[[["__d"]],["result",["searchresult"]]]],[11,"clone","","",27,[[["self"]],["image"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"encode","","",27,[[["self"],["__s"]],["result"]]],[11,"decode","","",27,[[["__d"]],["result",["image"]]]],[11,"clone","","",28,[[["self"]],["imagedetails"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"encode","","",28,[[["self"],["__s"]],["result"]]],[11,"decode","","",28,[[["__d"]],["result",["imagedetails"]]]],[11,"clone","","",29,[[["self"]],["container"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"encode","","",29,[[["self"],["__s"]],["result"]]],[11,"decode","","",29,[[["__d"]],["result",["container"]]]],[11,"clone","","",30,[[["self"]],["containerdetails"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"encode","","",30,[[["self"],["__s"]],["result"]]],[11,"decode","","",30,[[["__d"]],["result",["containerdetails"]]]],[11,"clone","","",31,[[["self"]],["mount"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"encode","","",31,[[["self"],["__s"]],["result"]]],[11,"decode","","",31,[[["__d"]],["result",["mount"]]]],[11,"clone","","",32,[[["self"]],["state"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"encode","","",32,[[["self"],["__s"]],["result"]]],[11,"decode","","",32,[[["__d"]],["result",["state"]]]],[11,"clone","","",33,[[["self"]],["networksettings"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"encode","","",33,[[["self"],["__s"]],["result"]]],[11,"decode","","",33,[[["__d"]],["result",["networksettings"]]]],[11,"clone","","",34,[[["self"]],["hostconfig"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"encode","","",34,[[["self"],["__s"]],["result"]]],[11,"decode","","",34,[[["__d"]],["result",["hostconfig"]]]],[11,"clone","","",35,[[["self"]],["config"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"encode","","",35,[[["self"],["__s"]],["result"]]],[11,"decode","","",35,[[["__d"]],["result",["config"]]]],[11,"env","","",35,[[["self"]],["hashmap",["string","string"]]]],[11,"clone","","",36,[[["self"]],["port"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"encode","","",36,[[["self"],["__s"]],["result"]]],[11,"decode","","",36,[[["__d"]],["result",["port"]]]],[11,"clone","","",37,[[["self"]],["stats"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"encode","","",37,[[["self"],["__s"]],["result"]]],[11,"decode","","",37,[[["__d"]],["result",["stats"]]]],[11,"clone","","",38,[[["self"]],["network"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"encode","","",38,[[["self"],["__s"]],["result"]]],[11,"decode","","",38,[[["__d"]],["result",["network"]]]],[11,"clone","","",39,[[["self"]],["ipam"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"encode","","",39,[[["self"],["__s"]],["result"]]],[11,"decode","","",39,[[["__d"]],["result",["ipam"]]]],[11,"clone","","",40,[[["self"]],["networkdetails"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"encode","","",40,[[["self"],["__s"]],["result"]]],[11,"decode","","",40,[[["__d"]],["result",["networkdetails"]]]],[11,"clone","","",41,[[["self"]],["networkcontainerdetails"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"encode","","",41,[[["self"],["__s"]],["result"]]],[11,"decode","","",41,[[["__d"]],["result",["networkcontainerdetails"]]]],[11,"clone","","",42,[[["self"]],["networkcreateinfo"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"encode","","",42,[[["self"],["__s"]],["result"]]],[11,"decode","","",42,[[["__d"]],["result",["networkcreateinfo"]]]],[11,"clone","","",43,[[["self"]],["memorystats"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"encode","","",43,[[["self"],["__s"]],["result"]]],[11,"decode","","",43,[[["__d"]],["result",["memorystats"]]]],[11,"clone","","",44,[[["self"]],["memorystat"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"encode","","",44,[[["self"],["__s"]],["result"]]],[11,"decode","","",44,[[["__d"]],["result",["memorystat"]]]],[11,"clone","","",45,[[["self"]],["cpustats"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"encode","","",45,[[["self"],["__s"]],["result"]]],[11,"decode","","",45,[[["__d"]],["result",["cpustats"]]]],[11,"clone","","",46,[[["self"]],["cpuusage"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"encode","","",46,[[["self"],["__s"]],["result"]]],[11,"decode","","",46,[[["__d"]],["result",["cpuusage"]]]],[11,"clone","","",47,[[["self"]],["throttlingdata"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"encode","","",47,[[["self"],["__s"]],["result"]]],[11,"decode","","",47,[[["__d"]],["result",["throttlingdata"]]]],[11,"clone","","",48,[[["self"]],["blkiostats"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"encode","","",48,[[["self"],["__s"]],["result"]]],[11,"decode","","",48,[[["__d"]],["result",["blkiostats"]]]],[11,"clone","","",49,[[["self"]],["blkiostat"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"encode","","",49,[[["self"],["__s"]],["result"]]],[11,"decode","","",49,[[["__d"]],["result",["blkiostat"]]]],[11,"clone","","",50,[[["self"]],["change"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"encode","","",50,[[["self"],["__s"]],["result"]]],[11,"decode","","",50,[[["__d"]],["result",["change"]]]],[11,"clone","","",51,[[["self"]],["top"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"encode","","",51,[[["self"],["__s"]],["result"]]],[11,"decode","","",51,[[["__d"]],["result",["top"]]]],[11,"clone","","",52,[[["self"]],["version"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"encode","","",52,[[["self"],["__s"]],["result"]]],[11,"decode","","",52,[[["__d"]],["result",["version"]]]],[11,"clone","","",53,[[["self"]],["info"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"encode","","",53,[[["self"],["__s"]],["result"]]],[11,"decode","","",53,[[["__d"]],["result",["info"]]]],[11,"clone","","",54,[[["self"]],["containercreateinfo"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"encode","","",54,[[["self"],["__s"]],["result"]]],[11,"decode","","",54,[[["__d"]],["result",["containercreateinfo"]]]],[11,"clone","","",55,[[["self"]],["history"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"encode","","",55,[[["self"],["__s"]],["result"]]],[11,"decode","","",55,[[["__d"]],["result",["history"]]]],[11,"clone","","",56,[[["self"]],["exit"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"encode","","",56,[[["self"],["__s"]],["result"]]],[11,"decode","","",56,[[["__d"]],["result",["exit"]]]],[11,"clone","","",57,[[["self"]],["event"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"encode","","",57,[[["self"],["__s"]],["result"]]],[11,"decode","","",57,[[["__d"]],["result",["event"]]]],[11,"clone","","",58,[[["self"]],["status"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[0,"transport","shiplift","Transports for communicating with the docker daemon",N,N],[4,"Transport","shiplift::transport","Transports are types which define the means of communication with the docker daemon",N,N],[13,"Tcp","","A network tcp interface",59,N],[12,"client","shiplift::transport::Transport","",59,N],[12,"host","","",59,N],[13,"Unix","shiplift::transport","A Unix domain socket",59,N],[12,"client","shiplift::transport::Transport","",59,N],[12,"path","","",59,N],[5,"tar","shiplift::transport","",N,[[],["contenttype"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"request","","",59,[[["self"],["method"],["str"],["option"]],["result",["string"]]]],[11,"stream","","",59,[[["self"],["method"],["str"],["option"]],["result",["box"]]]],[0,"errors","shiplift","Representations of various client errors",N,N],[4,"Error","shiplift::errors","",N,N],[13,"Decoding","","",60,N],[13,"Encoding","","",60,N],[13,"Parse","","",60,N],[13,"Http","","",60,N],[13,"IO","","",60,N],[13,"Fault","","",60,N],[12,"code","shiplift::errors::Error","",60,N],[12,"message","","",60,N],[11,"fmt","shiplift::errors","",60,[[["self"],["formatter"]],["result"]]],[11,"from","","",60,[[["parsererror"]],["error"]]],[11,"from","","",60,[[["decodererror"]],["error"]]],[11,"from","","",60,[[["encodererror"]],["error"]]],[11,"from","","",60,[[["httperror"]],["error"]]],[11,"from","","",60,[[["ioerror"]],["error"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"description","","",60,[[["self"]],["str"]]],[11,"cause","","",60,[[["self"]],["option",["errortrait"]]]],[0,"tty","shiplift","",N,N],[3,"Tty","shiplift::tty","",N,N],[12,"stdout","","",61,N],[12,"stderr","","",61,N],[11,"new","","",61,[[["box",["read"]]],["tty"]]],[6,"Result","shiplift","Represents the result of all docker operations",N,N],[11,"new","","Exports an interface for operations that may be performed against a named image",62,[[["docker"],["s"]],["image"]]],[11,"inspect","","Inspects a named image's details",62,[[["self"]],["result",["imagedetails"]]]],[11,"history","","Lists the history of the images set of changes",62,[[["self"]],["result",["vec"]]]],[11,"delete","","Delete's an image",62,[[["self"]],["result",["vec"]]]],[11,"export","","Export this image to a tarball",62,[[["self"]],["result",["box"]]]],[11,"new","","Exports an interface for interacting with docker images",63,[[["docker"]],["images"]]],[11,"build","","Builds a new image build by reading a Dockerfile in a target directory",63,[[["self"],["buildoptions"]],["result",["box"]]]],[11,"list","","Lists the docker images on the current docker host",63,[[["self"],["imagelistoptions"]],["result",["vec"]]]],[11,"get","","Returns a reference to a set of operations available for a named image",63,[[["self"],["str"]],["image"]]],[11,"search","","Search for docker images by term",63,[[["self"],["str"]],["result",["vec"]]]],[11,"pull","","Pull and create a new docker images from an existing image",63,[[["self"],["pulloptions"]],["result",["box"]]]],[11,"export","","exports a collection of named images, either by name, name:tag, or image id, into a tarball",63,[[["self"],["vec",["str"]]],["result",["box"]]]],[11,"new","","Exports an interface exposing operations against a container instance",64,[[["docker"],["s"]],["container"]]],[11,"id","","a getter for the container id",64,[[["self"]],["str"]]],[11,"inspect","","Inspects the current docker container instance's details",64,[[["self"]],["result",["containerdetails"]]]],[11,"top","","Returns a `top` view of information about the container process",64,[[["self"],["option",["str"]]],["result",["top"]]]],[11,"logs","","Returns a stream of logs emitted but the container instance",64,[[["self"],["logsoptions"]],["result",["box"]]]],[11,"changes","","Returns a set of changes made to the container instance",64,[[["self"]],["result",["vec"]]]],[11,"export","","Exports the current docker container into a tarball",64,[[["self"]],["result",["box"]]]],[11,"stats","","Returns a stream of stats specific to this container instance",64,[[["self"]],["result",["box"]]]],[11,"start","","Start the container instance",64,[[["self"]],["result"]]],[11,"stop","","Stop the container instance",64,[[["self"],["option",["duration"]]],["result"]]],[11,"restart","","Restart the container instance",64,[[["self"],["option",["duration"]]],["result"]]],[11,"kill","","Kill the container instance",64,[[["self"],["option",["str"]]],["result"]]],[11,"rename","","Rename the container instance",64,[[["self"],["str"]],["result"]]],[11,"pause","","Pause the container instance",64,[[["self"]],["result"]]],[11,"unpause","","Unpause the container instance",64,[[["self"]],["result"]]],[11,"wait","","Wait until the container stops",64,[[["self"]],["result",["exit"]]]],[11,"delete","","Delete the container instance",64,[[["self"]],["result"]]],[11,"remove","","Delete the container instance (todo: force/v)",64,[[["self"],["rmcontaineroptions"]],["result"]]],[11,"exec","","Exec the specified command in the container",64,[[["self"],["execcontaineroptions"]],["result",["tty"]]]],[11,"new","","Exports an interface for interacting with docker containers",65,[[["docker"]],["containers"]]],[11,"list","","Lists the container instances on the docker host",65,[[["self"],["containerlistoptions"]],["result",["vec"]]]],[11,"get","","Returns a reference to a set of operations available to a specific container instance",65,[[["self"],["str"]],["container"]]],[11,"create","","Returns a builder interface for creating a new container instance",65,[[["self"],["containeroptions"]],["result",["containercreateinfo"]]]],[11,"new","","Exports an interface for interacting with docker Networks",66,[[["docker"]],["networks"]]],[11,"list","","List the docker networks on the current docker host",66,[[["self"],["networklistoptions"]],["result",["vec"]]]],[11,"get","","Returns a reference to a set of operations available to a specific network instance",66,[[["self"],["str"]],["network"]]],[11,"create","","",66,[[["self"],["networkcreateoptions"]],["result",["networkcreateinfo"]]]],[11,"new","","Exports an interface exposing operations against a network instance",67,[[["docker"],["s"]],["network"]]],[11,"id","","a getter for the Network id",67,[[["self"]],["str"]]],[11,"inspect","","Inspects the current docker network instance's details",67,[[["self"]],["result",["networkinfo"]]]],[11,"delete","","Delete the network instance",67,[[["self"]],["result"]]],[11,"connect","","Connect container to network",67,[[["self"],["containerconnectionoptions"]],["result"]]],[11,"disconnect","","Disconnect container to network",67,[[["self"],["containerconnectionoptions"]],["result"]]],[11,"new","","constructs a new Docker instance for a docker host listening at a url specified by an env var `DOCKER_HOST`, falling back on unix:///var/run/docker.sock",68,[[],["docker"]]],[11,"host","","constructs a new Docker instance for docker host listening at the given host url",68,[[["url"]],["docker"]]],[11,"images","","Exports an interface for interacting with docker images",68,[[["self"]],["images"]]],[11,"containers","","Exports an interface for interacting with docker containers",68,[[["self"]],["containers"]]],[11,"networks","","",68,[[["self"]],["networks"]]],[11,"version","","Returns version information associated with the docker daemon",68,[[["self"]],["result",["version"]]]],[11,"info","","Returns information associated with the docker daemon",68,[[["self"]],["result",["info"]]]],[11,"ping","","Returns a simple ping response indicating the docker daemon is accessible",68,[[["self"]],["result",["string"]]]],[11,"events","","Returns an interator over streamed docker events",68,[[["self"],["eventsoptions"]],["result",["box"]]]]],"paths":[[3,"BuildOptions"],[3,"ContainerOptions"],[3,"NetworkCreateOptions"],[3,"ContainerConnectionOptions"],[4,"ContainerFilter"],[4,"EventFilterType"],[4,"EventFilter"],[4,"ImageFilter"],[3,"PullOptions"],[3,"PullOptionsBuilder"],[3,"BuildOptionsBuilder"],[3,"ContainerListOptions"],[3,"ContainerListOptionsBuilder"],[3,"ContainerOptionsBuilder"],[3,"ExecContainerOptions"],[3,"ExecContainerOptionsBuilder"],[3,"EventsOptions"],[3,"EventsOptionsBuilder"],[3,"LogsOptions"],[3,"LogsOptionsBuilder"],[3,"ImageListOptions"],[3,"ImageListOptionsBuilder"],[3,"RmContainerOptions"],[3,"RmContainerOptionsBuilder"],[3,"NetworkListOptions"],[3,"NetworkCreateOptionsBuilder"],[3,"SearchResult"],[3,"Image"],[3,"ImageDetails"],[3,"Container"],[3,"ContainerDetails"],[3,"Mount"],[3,"State"],[3,"NetworkSettings"],[3,"HostConfig"],[3,"Config"],[3,"Port"],[3,"Stats"],[3,"Network"],[3,"IPAM"],[3,"NetworkDetails"],[3,"NetworkContainerDetails"],[3,"NetworkCreateInfo"],[3,"MemoryStats"],[3,"MemoryStat"],[3,"CpuStats"],[3,"CpuUsage"],[3,"ThrottlingData"],[3,"BlkioStats"],[3,"BlkioStat"],[3,"Change"],[3,"Top"],[3,"Version"],[3,"Info"],[3,"ContainerCreateInfo"],[3,"History"],[3,"Exit"],[3,"Event"],[4,"Status"],[4,"Transport"],[4,"Error"],[3,"Tty"],[3,"Image"],[3,"Images"],[3,"Container"],[3,"Containers"],[3,"Networks"],[3,"Network"],[3,"Docker"]]};
initSearch(searchIndex);
